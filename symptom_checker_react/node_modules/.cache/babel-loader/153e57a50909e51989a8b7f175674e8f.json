{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acelin\\\\gullwings\\\\symptom_checker_fe\\\\src\\\\components\\\\SymptomSelect.js\";\nimport React from \"react\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport axios from \"axios\";\nimport { API_URL } from \"../constants\";\n\nclass SymptomSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSymptoms = () => {\n      axios.get(API_URL).then(res => this.setState({\n        symptoms: res.data\n      }));\n    };\n\n    this.state = {\n      value: '',\n      symptoms: [],\n      symptomSubmitted: false,\n      likelyDiagnosis: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getSymptoms();\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axios.get(API_URL + 'symptoms/' + this.state.value + '/diagnose', this.state).then(res => {\n      this.setState({\n        symptomSubmitted: true\n      });\n      this.setState({\n        likelyDiagnosis: res.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"symptomSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"Choose your symptom\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"symptom\",\n      id: \"symptomSelect\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, this.state.symptoms.map(symptom => /*#__PURE__*/React.createElement(\"option\", {\n      key: symptom.id,\n      value: symptom.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 53\n      }\n    }, symptom.name)))), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, \"Submit\")), this.state.symptomSubmitted && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    }, \"\\\"Your diagnosis is: \\\" \", this.state.likelyDiagnosis.name));\n  }\n\n}\n\nexport default SymptomSelect;","map":{"version":3,"sources":["C:/Users/Acelin/gullwings/symptom_checker_fe/src/components/SymptomSelect.js"],"names":["React","Button","Form","FormGroup","Input","Label","axios","API_URL","SymptomSelect","Component","constructor","props","getSymptoms","get","then","res","setState","symptoms","data","state","value","symptomSubmitted","likelyDiagnosis","handleSubmit","bind","handleChange","componentDidMount","event","target","name","preventDefault","render","map","symptom","id"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { API_URL } from \"../constants\";\r\n\r\nclass SymptomSelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      symptoms: [],\r\n      symptomSubmitted : false,\r\n      likelyDiagnosis : \"\"\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSymptoms();\r\n  }\r\n\r\n  getSymptoms = () => {\r\n    axios.get(API_URL).then(res => this.setState({ symptoms: res.data }));\r\n  };\r\n\r\n  handleChange(event){\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.setState({value: event.target.value})\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    axios.get(API_URL + 'symptoms/' + this.state.value + '/diagnose', this.state).then(res => {\r\n      this.setState({symptomSubmitted: true})\r\n      this.setState({likelyDiagnosis: res.data})\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"symptomSelect\">Choose your symptom</Label>\r\n            <Input type=\"select\" name=\"symptom\" id=\"symptomSelect\" value={this.state.value} onChange={this.handleChange}>\r\n              {this.state.symptoms.map((symptom) => <option key={symptom.id} value={symptom.id}>{symptom.name}</option>)}\r\n            </Input>\r\n          </FormGroup>\r\n          <Button>Submit</Button>\r\n        </Form>\r\n        {this.state.symptomSubmitted &&\r\n          <div>\r\n            \"Your diagnosis is: \" {this.state.likelyDiagnosis.name}\r\n           </div>\r\n        }\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SymptomSelect;\r\n"]},"metadata":{},"sourceType":"module"}