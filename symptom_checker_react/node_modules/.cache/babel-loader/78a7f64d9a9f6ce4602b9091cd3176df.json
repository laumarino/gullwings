{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acelin\\\\gullwings\\\\symptom_checker_fe\\\\src\\\\components\\\\SymptomSelect.js\";\nimport React from \"react\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport axios from \"axios\";\nimport { API_URL } from \"../constants\";\n\nclass SymptomSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSymptoms = () => {\n      axios.get(API_URL).then(res => this.setState({\n        symptoms: res.data\n      }));\n    };\n\n    this.state = {\n      value: '',\n      symptoms: [],\n      symptomSubmitted: false,\n      likelyDiagnosis: \"\",\n      confirmValue: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleConfirmSubmit = this.handleConfirmSubmit.bind(this);\n    this.handleConfirmChange = this.handleConfirmChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.getSymptoms();\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axios.get(API_URL + 'symptoms/' + this.state.value + '/diagnose', this.state).then(res => {\n      this.setState({\n        symptomSubmitted: true\n      });\n      this.setState({\n        likelyDiagnosis: res.data\n      });\n    });\n  }\n\n  handleConfirmChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    this.setState({\n      confirmValue: event.target.value\n    });\n  }\n\n  handleConfirmSubmit(event) {\n    event.preventDefault();\n\n    if (this.state.confirmValue == \"yes\") {\n      this.state.likelyDiagnosis.frequency = this.state.likelyDiagnosis.frequency + 1;\n      axios.put(API_URL + 'diagnoses/' + state.likelyDiagnosis.id, this.state.likelyDiagnosis);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"symptomSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, \"Choose your symptom\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"symptom\",\n      id: \"symptomSelect\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, this.state.symptoms.map(symptom => /*#__PURE__*/React.createElement(\"option\", {\n      key: symptom.id,\n      value: symptom.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 53\n      }\n    }, symptom.name)))), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Submit\")), this.state.symptomSubmitted && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Your most likely diagnosis is \", this.state.likelyDiagnosis.name, \".\", /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleConfirmSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"diagConfirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"Do you have \", this.state.likelyDiagnosis.name, \"?\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"diagConfirm\",\n      id: \"diagConfirm\",\n      value: this.state.confirmValue,\n      onChange: this.handleConfirmChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, \"No\"))), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default SymptomSelect;","map":{"version":3,"sources":["C:/Users/Acelin/gullwings/symptom_checker_fe/src/components/SymptomSelect.js"],"names":["React","Button","Form","FormGroup","Input","Label","axios","API_URL","SymptomSelect","Component","constructor","props","getSymptoms","get","then","res","setState","symptoms","data","state","value","symptomSubmitted","likelyDiagnosis","confirmValue","handleSubmit","bind","handleChange","handleConfirmSubmit","handleConfirmChange","componentDidMount","event","target","name","preventDefault","frequency","put","id","render","map","symptom"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { API_URL } from \"../constants\";\r\n\r\nclass SymptomSelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      symptoms: [],\r\n      symptomSubmitted : false,\r\n      likelyDiagnosis : \"\",\r\n      confirmValue: \"\"\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleConfirmSubmit = this.handleConfirmSubmit.bind(this);\r\n    this.handleConfirmChange = this.handleConfirmChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSymptoms();\r\n  }\r\n\r\n  getSymptoms = () => {\r\n    axios.get(API_URL).then(res => this.setState({ symptoms: res.data }));\r\n  };\r\n\r\n  handleChange(event){\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.setState({value: event.target.value})\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    axios.get(API_URL + 'symptoms/' + this.state.value + '/diagnose', this.state).then(res => {\r\n      this.setState({symptomSubmitted: true})\r\n      this.setState({likelyDiagnosis: res.data})\r\n    });\r\n  };\r\n\r\n  handleConfirmChange(event){\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.setState({confirmValue: event.target.value})\r\n  }\r\n\r\n  handleConfirmSubmit(event) {\r\n    event.preventDefault();\r\n    if (this.state.confirmValue == \"yes\") {\r\n      this.state.likelyDiagnosis.frequency = this.state.likelyDiagnosis.frequency + 1\r\n      axios.put(API_URL + 'diagnoses/' + state.likelyDiagnosis.id, this.state.likelyDiagnosis)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.handleSubmit}>\r\n          <FormGroup>\r\n            <Label for=\"symptomSelect\">Choose your symptom</Label>\r\n            <Input type=\"select\" name=\"symptom\" id=\"symptomSelect\" value={this.state.value} onChange={this.handleChange}>\r\n              {this.state.symptoms.map((symptom) => <option key={symptom.id} value={symptom.id}>{symptom.name}</option>)}\r\n            </Input>\r\n          </FormGroup>\r\n          <Button>Submit</Button>\r\n        </Form>\r\n        {this.state.symptomSubmitted &&\r\n          <div>\r\n            Your most likely diagnosis is {this.state.likelyDiagnosis.name}.\r\n            <Form onSubmit={this.handleConfirmSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"diagConfirm\">Do you have {this.state.likelyDiagnosis.name}?</Label>\r\n                <Input type=\"select\" name=\"diagConfirm\" id=\"diagConfirm\" value={this.state.confirmValue} onChange={this.handleConfirmChange}>\r\n                  <option value=\"yes\">Yes</option>\r\n                  <option value=\"no\">No</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <Button>Submit</Button>\r\n            </Form>\r\n           </div>\r\n        }\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SymptomSelect;\r\n"]},"metadata":{},"sourceType":"module"}