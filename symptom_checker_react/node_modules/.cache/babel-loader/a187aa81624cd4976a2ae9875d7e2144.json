{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acelin\\\\gullwings\\\\symptom_checker_fe\\\\src\\\\App.js\";\nimport React, { Component, Fragment } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport SymptomSelect from './components/SymptomSelect';\nimport axios from \"axios\";\nimport { API_URL } from \"./constants\";\n\nclass App extends Component {\n  //  state = {\n  //    symptoms: []\n  //  };\n  //\n  //  componentDidMount() {\n  //    if (this.props.symptom){\n  //      const { id, name } = this.props.symptom;\n  //      this.setState({ id, name });\n  //    this.getSymptoms();\n  //    }\n  //  }\n  //\n  //  getSymptoms = () => {\n  //    axios.get(API_URL).then(res => this.setState({ symptoms: res.data }));\n  //  };\n  render() {\n    return /*#__PURE__*/React.createElement(SymptomSelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Acelin/gullwings/symptom_checker_fe/src/App.js"],"names":["React","Component","Fragment","SymptomSelect","axios","API_URL","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;;AAEA,OAAO,WAAP;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEEM,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AArByB;;AAwB5B,eAAeD,GAAf","sourcesContent":["import React, {Component, Fragment} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SymptomSelect from './components/SymptomSelect'\nimport axios from \"axios\";\nimport { API_URL } from \"./constants\";\n\nclass App extends Component {\n//  state = {\n//    symptoms: []\n//  };\n//\n//  componentDidMount() {\n//    if (this.props.symptom){\n//      const { id, name } = this.props.symptom;\n//      this.setState({ id, name });\n//    this.getSymptoms();\n//    }\n//  }\n//\n//  getSymptoms = () => {\n//    axios.get(API_URL).then(res => this.setState({ symptoms: res.data }));\n//  };\n\n  render() {\n    return (\n      <SymptomSelect />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}