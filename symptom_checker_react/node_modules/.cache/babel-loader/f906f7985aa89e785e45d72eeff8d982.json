{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acelin\\\\gullwings\\\\symptom_checker_fe\\\\src\\\\components\\\\SymptomSelect.js\";\nimport React from \"react\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport axios from \"axios\";\nimport { API_URL } from \"../constants\";\n\nclass SymptomSelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getSymptoms = () => {\n      axios.get(API_URL).then(res => this.setState({\n        symptoms: res.data\n      }));\n    };\n\n    this.getDiagnoses = () => {\n      axios.get(API_URL + 'symptoms/' + this.state.value).then(res => this.setState({\n        diagnoses: res.data\n      }));\n    };\n\n    this.state = {\n      value: '',\n      symptoms: [],\n      symptomSubmitted: false,\n      likelyDiagnosis: \"\",\n      confirmValue: \"\",\n      diagConfirmed: false,\n      diagnoses: []\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleConfirmSubmit = this.handleConfirmSubmit.bind(this);\n    this.handleConfirmChange = this.handleConfirmChange.bind(this);\n    this.handleResetSubmit = this.handleResetSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.getSymptoms();\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    axios.get(API_URL + 'symptoms/' + this.state.value + '/diagnose', this.state).then(res => {\n      this.setState({\n        symptomSubmitted: true\n      });\n      this.setState({\n        likelyDiagnosis: res.data\n      });\n    });\n  }\n\n  handleConfirmChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n    this.setState({\n      confirmValue: event.target.value\n    });\n  }\n\n  handleConfirmSubmit(event) {\n    event.preventDefault();\n    this.getDiagnoses();\n\n    if (this.state.confirmValue == \"yes\") {\n      this.state.likelyDiagnosis.frequency = this.state.likelyDiagnosis.frequency + 1;\n      axios.put(API_URL + 'diagnoses/' + this.state.likelyDiagnosis.id, this.state.likelyDiagnosis).then(() => {\n        this.setState({\n          diagConfirmed: true\n        });\n      });\n    }\n  }\n\n  handleResetSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      value: '',\n      symptomSubmitted: false,\n      likelyDiagnosis: \"\",\n      confirmValue: \"\",\n      diagConfirmed: false,\n      diagnoses: []\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, !this.state.symptomSubmitted && /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"symptomSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, \"Choose your symptom\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"symptom\",\n      id: \"symptomSelect\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, this.state.symptoms.map(symptom => /*#__PURE__*/React.createElement(\"option\", {\n      key: symptom.id,\n      value: symptom.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 55\n      }\n    }, symptom.name)))), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Submit\")), this.state.symptomSubmitted && !this.state.diagConfirmed && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, \"Your most likely diagnosis is \", this.state.likelyDiagnosis.name, \".\", /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleConfirmSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"diagConfirm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"Do you have \", this.state.likelyDiagnosis.name, \"?\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"diagConfirm\",\n      id: \"diagConfirm\",\n      value: this.state.confirmValue,\n      onChange: this.handleConfirmChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"yes\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, \"Yes\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"no\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 19\n      }\n    }, \"No\"))), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }, \"Submit\"))), this.state.diagConfirmed && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, \"'Thank you for confirming your diagnosis.  Here is a list of diagnoses and their frequencies for your symptom'\", this.state.diagnoses.map(diagnosis => /*#__PURE__*/React.createElement(\"tr\", {\n      key: diagnosis.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, diagnosis.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, diagnosis.frequency))), \";\", /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.handleResetSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }\n    }, \"Start Over\"))));\n  }\n\n}\n\nexport default SymptomSelect;","map":{"version":3,"sources":["C:/Users/Acelin/gullwings/symptom_checker_fe/src/components/SymptomSelect.js"],"names":["React","Button","Form","FormGroup","Input","Label","axios","API_URL","SymptomSelect","Component","constructor","props","getSymptoms","get","then","res","setState","symptoms","data","getDiagnoses","state","value","diagnoses","symptomSubmitted","likelyDiagnosis","confirmValue","diagConfirmed","handleSubmit","bind","handleChange","handleConfirmSubmit","handleConfirmChange","handleResetSubmit","componentDidMount","event","target","name","preventDefault","frequency","put","id","render","map","symptom","diagnosis"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { API_URL } from \"../constants\";\r\n\r\nclass SymptomSelect extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: '',\r\n      symptoms: [],\r\n      symptomSubmitted : false,\r\n      likelyDiagnosis : \"\",\r\n      confirmValue: \"\",\r\n      diagConfirmed : false,\r\n      diagnoses : []\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleConfirmSubmit = this.handleConfirmSubmit.bind(this);\r\n    this.handleConfirmChange = this.handleConfirmChange.bind(this);\r\n    this.handleResetSubmit = this.handleResetSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSymptoms();\r\n  }\r\n\r\n  getSymptoms = () => {\r\n    axios.get(API_URL).then(res => this.setState({ symptoms: res.data }));\r\n  };\r\n\r\n  getDiagnoses = () => {\r\n    axios.get(API_URL + 'symptoms/' + this.state.value).then(res => this.setState({ diagnoses: res.data}))\r\n  }\r\n\r\n  handleChange(event){\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.setState({value: event.target.value})\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    axios.get(API_URL + 'symptoms/' + this.state.value + '/diagnose', this.state).then(res => {\r\n      this.setState({symptomSubmitted: true})\r\n      this.setState({likelyDiagnosis: res.data})\r\n    });\r\n  };\r\n\r\n  handleConfirmChange(event){\r\n    this.setState({ [event.target.name]: event.target.value });\r\n    this.setState({confirmValue: event.target.value});\r\n  }\r\n\r\n  handleConfirmSubmit(event) {\r\n    event.preventDefault();\r\n    this.getDiagnoses();\r\n    if (this.state.confirmValue == \"yes\") {\r\n      this.state.likelyDiagnosis.frequency = this.state.likelyDiagnosis.frequency + 1\r\n      axios.put(API_URL + 'diagnoses/' + this.state.likelyDiagnosis.id, this.state.likelyDiagnosis).then(() => {\r\n      this.setState({diagConfirmed: true})\r\n      });\r\n    }\r\n  }\r\n\r\n  handleResetSubmit(event) {\r\n    event.preventDefault();\r\n    this.setState({\r\n      value: '',\r\n      symptomSubmitted : false,\r\n      likelyDiagnosis : \"\",\r\n      confirmValue: \"\",\r\n      diagConfirmed : false,\r\n      diagnoses : []\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.symptomSubmitted &&\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <FormGroup>\r\n              <Label for=\"symptomSelect\">Choose your symptom</Label>\r\n              <Input type=\"select\" name=\"symptom\" id=\"symptomSelect\" value={this.state.value} onChange={this.handleChange}>\r\n                {this.state.symptoms.map((symptom) => <option key={symptom.id} value={symptom.id}>{symptom.name}</option>)}\r\n              </Input>\r\n            </FormGroup>\r\n            <Button>Submit</Button>\r\n          </Form>\r\n        }\r\n        {this.state.symptomSubmitted && !this.state.diagConfirmed &&\r\n          <div>\r\n            Your most likely diagnosis is {this.state.likelyDiagnosis.name}.\r\n            <Form onSubmit={this.handleConfirmSubmit}>\r\n              <FormGroup>\r\n                <Label for=\"diagConfirm\">Do you have {this.state.likelyDiagnosis.name}?</Label>\r\n                <Input type=\"select\" name=\"diagConfirm\" id=\"diagConfirm\" value={this.state.confirmValue} onChange={this.handleConfirmChange}>\r\n                  <option value=\"yes\">Yes</option>\r\n                  <option value=\"no\">No</option>\r\n                </Input>\r\n              </FormGroup>\r\n              <Button>Submit</Button>\r\n            </Form>\r\n           </div>\r\n        }\r\n        {this.state.diagConfirmed &&\r\n          <div>\r\n            'Thank you for confirming your diagnosis.  Here is a list of diagnoses and their frequencies for your symptom'\r\n            {this.state.diagnoses.map((diagnosis) => (\r\n              <tr key={diagnosis.id}>\r\n                <td>{diagnosis.name}</td>\r\n                <td>{diagnosis.frequency}</td>\r\n              </tr>\r\n            ))};\r\n            <Form onSubmit={this.handleResetSubmit}>\r\n              <Button>Start Over</Button>\r\n            </Form>\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SymptomSelect;\r\n"]},"metadata":{},"sourceType":"module"}