{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acelin\\\\gullwings\\\\symptom_checker_fe\\\\src\\\\components\\\\SymptomSelect.js\";\nimport React from \"react\";\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\nimport axios from \"axios\";\nimport { API_URL } from \"../constants\";\n\nclass SymptomSelect extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: 0,\n      symptoms: [],\n      symptomSubmitted: false\n    };\n\n    this.getSymptoms = () => {\n      axios.get(API_URL).then(res => this.setState({\n        symptoms: res.data\n      }));\n    };\n\n    this.onChange = e => {\n      this.setState({\n        id: e.target.value\n      });\n    };\n\n    this.diagnose = e => {\n      e.preventDefault();\n      axios.get(API_URL + 'symptoms/' + e.target.display + '/diagnose', this.state).then(() => {\n        this.setState({\n          symptomSubmitted: true\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    //    if (this.props.symptom){\n    //      const { sid, sname } = this.props.symptom;\n    //      this.setState({ sid, sname });\n    //    }\n    this.getSymptoms();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.diagnose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      for: \"symptomSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"Choose your symptom\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"select\",\n      name: \"symptom\",\n      id: \"symptomSelect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, this.state.symptoms.map(symptom => /*#__PURE__*/React.createElement(\"option\", {\n      key: symptom.id,\n      value: symptom.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 53\n      }\n    }, symptom.name)))), /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default SymptomSelect;","map":{"version":3,"sources":["C:/Users/Acelin/gullwings/symptom_checker_fe/src/components/SymptomSelect.js"],"names":["React","Button","Form","FormGroup","Input","Label","axios","API_URL","SymptomSelect","Component","state","value","symptoms","symptomSubmitted","getSymptoms","get","then","res","setState","data","onChange","e","id","target","diagnose","preventDefault","display","componentDidMount","render","map","symptom","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,QAAsD,YAAtD;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,OAAT,QAAwB,cAAxB;;AAEA,MAAMC,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAC1CC,KAD0C,GAClC;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,gBAAgB,EAAG;AAHb,KADkC;;AAAA,SAe1CC,WAf0C,GAe5B,MAAM;AAClBR,MAAAA,KAAK,CAACS,GAAN,CAAUR,OAAV,EAAmBS,IAAnB,CAAwBC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEN,QAAAA,QAAQ,EAAEK,GAAG,CAACE;AAAhB,OAAd,CAA/B;AACD,KAjByC;;AAAA,SAmB1CC,QAnB0C,GAmB/BC,CAAC,IAAI;AACd,WAAKH,QAAL,CAAc;AAAEI,QAAAA,EAAE,EAAED,CAAC,CAACE,MAAF,CAASZ;AAAf,OAAd;AACD,KArByC;;AAAA,SAuB1Ca,QAvB0C,GAuB/BH,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACI,cAAF;AACAnB,MAAAA,KAAK,CAACS,GAAN,CAAUR,OAAO,GAAG,WAAV,GAAwBc,CAAC,CAACE,MAAF,CAASG,OAAjC,GAA2C,WAArD,EAAkE,KAAKhB,KAAvE,EAA8EM,IAA9E,CAAmF,MAAM;AACvF,aAAKE,QAAL,CAAc;AAACL,UAAAA,gBAAgB,EAAE;AAAnB,SAAd;AACD,OAFD;AAGD,KA5ByC;AAAA;;AAO1Cc,EAAAA,iBAAiB,GAAG;AACtB;AACA;AACA;AACA;AACI,SAAKb,WAAL;AACD;;AAiBDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKJ,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,IAAI,EAAC,SAA1B;AAAoC,MAAA,EAAE,EAAC,eAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKd,KAAL,CAAWE,QAAX,CAAoBiB,GAApB,CAAyBC,OAAD,iBAAa;AAAQ,MAAA,GAAG,EAAEA,OAAO,CAACR,EAArB;AAAyB,MAAA,KAAK,EAAEQ,OAAO,CAACR,EAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6CQ,OAAO,CAACC,IAArD,CAArC,CADH,CAFF,CADF,eAOE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,CADF;AAeD;;AA9CyC;;AAiD5C,eAAevB,aAAf","sourcesContent":["import React from \"react\";\r\nimport { Button, Form, FormGroup, Input, Label } from \"reactstrap\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { API_URL } from \"../constants\";\r\n\r\nclass SymptomSelect extends React.Component {\r\n  state = {\r\n    value: 0,\r\n    symptoms: [],\r\n    symptomSubmitted : false\r\n  };\r\n\r\n  componentDidMount() {\r\n//    if (this.props.symptom){\r\n//      const { sid, sname } = this.props.symptom;\r\n//      this.setState({ sid, sname });\r\n//    }\r\n    this.getSymptoms();\r\n  }\r\n\r\n  getSymptoms = () => {\r\n    axios.get(API_URL).then(res => this.setState({ symptoms: res.data }));\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({ id: e.target.value });\r\n  };\r\n\r\n  diagnose = e => {\r\n    e.preventDefault();\r\n    axios.get(API_URL + 'symptoms/' + e.target.display + '/diagnose', this.state).then(() => {\r\n      this.setState({symptomSubmitted: true})\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Form onSubmit={this.diagnose}>\r\n          <FormGroup>\r\n            <Label for=\"symptomSelect\">Choose your symptom</Label>\r\n            <Input type=\"select\" name=\"symptom\" id=\"symptomSelect\">\r\n              {this.state.symptoms.map((symptom) => <option key={symptom.id} value={symptom.id}>{symptom.name}</option>)}\r\n            </Input>\r\n          </FormGroup>\r\n          <Button>Submit</Button>\r\n        </Form>\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default SymptomSelect;\r\n"]},"metadata":{},"sourceType":"module"}